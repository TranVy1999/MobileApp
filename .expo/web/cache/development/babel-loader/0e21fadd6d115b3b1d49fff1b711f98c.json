{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/nhathuynh/subject-mobile/MobileApp/App.js\";\n\nimport React, { useState, Suspense } from \"react\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport configureStore from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Spinner from \"./shares/Spiner\";\nimport Router from \"./router.js\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    \"nutito-regular\": require(\"./assets/fonts/NunitoSans-Regular.ttf\"),\n    \"nutito-bold\": require(\"./assets/fonts/NunitoSans-Bold.ttf\")\n  });\n};\n\nvar App = function App() {\n  var _configureStore = configureStore(),\n      store = _configureStore.store,\n      persistor = _configureStore.persistor;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoader = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (fontLoader) {\n    return React.createElement(Provider, {\n      store: store,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(PersistGate, {\n      persistor: persistor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(Suspense, {\n      fallback: React.createElement(Spinner, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 31\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, React.createElement(Router, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return React.createElement(Provider, {\n      store: store,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(PersistGate, {\n      persistor: persistor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(Suspense, {\n      fallback: React.createElement(Spinner, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 31\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }))));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/nhathuynh/subject-mobile/MobileApp/App.js"],"names":["React","useState","Suspense","Font","AppLoading","configureStore","Provider","PersistGate","Spinner","Router","getFonts","loadAsync","require","App","store","persistor","fontLoader","setFontLoaded"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,cAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SACfP,IAAI,CAACQ,SAAL,CAAe;AACb,sBAAkBC,OAAO,yCADZ;AAEb,mBAAeA,OAAO;AAFT,GAAf,CADe;AAAA,CAAjB;;AAMA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,wBACaR,cAAc,EAD3B;AAAA,MACRS,KADQ,mBACRA,KADQ;AAAA,MACDC,SADC,mBACDA,SADC;;AAAA,kBAGoBd,QAAQ,CAAC,KAAD,CAH5B;AAAA;AAAA,MAGTe,UAHS;AAAA,MAGGC,aAHH;;AAKhB,MAAID,UAAJ,EAAgB;AACd,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AASD,GAVD,MAUO;AACL,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEL,QADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMO,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AAYD;AACF,CA7BD;;AA+BA,eAAeJ,GAAf","sourcesContent":["import React, { useState, Suspense } from \"react\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport configureStore from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Spinner from \"./shares/Spiner\";\nimport Router from \"./router.js\";\n\nconst getFonts = () =>\n  Font.loadAsync({\n    \"nutito-regular\": require(\"./assets/fonts/NunitoSans-Regular.ttf\"),\n    \"nutito-bold\": require(\"./assets/fonts/NunitoSans-Bold.ttf\"),\n  });\n\nconst App = () => {\n  const { store, persistor } = configureStore();\n\n  const [fontLoader, setFontLoaded] = useState(false);\n\n  if (fontLoader) {\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <Suspense fallback={<Spinner />}>\n            <Router />\n          </Suspense>\n        </PersistGate>\n      </Provider>\n    );\n  } else {\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <Suspense fallback={<Spinner />}>\n            <AppLoading\n              startAsync={getFonts}\n              onFinish={() => setFontLoaded(true)}\n            />\n          </Suspense>\n        </PersistGate>\n      </Provider>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}