{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _Modal from \"@ant-design/react-native/lib/modal\";\n\nvar _marked = _regeneratorRuntime.mark(login),\n    _marked2 = _regeneratorRuntime.mark(editProfile),\n    _marked3 = _regeneratorRuntime.mark(register),\n    _marked4 = _regeneratorRuntime.mark(userSaga);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport { types, actionCreator } from \"./user.meta\";\nimport { loginRequest, editProfileRequest, registerRequest } from \"../../api/apiRouter\";\nvar errMessage = {\n  message: \"Opp! Đã xảy ra lỗi\",\n  description: \"Liên hệ ban quản trị viên để biết thêm thông tin chi tiết!\"\n};\n\nvar showAlert = function showAlert() {\n  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500000;\n\n  var alertInstance = _Modal.alert(title, message, actions);\n\n  setTimeout(function () {\n    alertInstance.close();\n  }, timeout);\n};\n\nfunction login(action) {\n  var _yield$call, body, user, token;\n\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginRequest, _objectSpread({}, action.payload));\n\n        case 3:\n          _yield$call = _context.sent;\n          body = _yield$call.body;\n          user = body.user, token = body.token;\n\n          if (!token) {\n            _context.next = 14;\n            break;\n          }\n\n          localStorage.setItem(\"pcutk\", token);\n          _context.next = 10;\n          return put(actionCreator.loginSuccess(user));\n\n        case 10:\n          showAlert(\"Đăng nhập thành công!\", \"\", [], 1000);\n          setTimeout(function () {\n            Router.push('/home', params = {\n              user: user\n            });\n          }, 1000);\n          _context.next = 15;\n          break;\n\n        case 14:\n          throw Error;\n\n        case 15:\n          _context.next = 22;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (!(_context.t0.response && _context.t0.response.status === 404 && _context.t0.response.data.message === \"LOGIN_FAIL\")) {\n            _context.next = 21;\n            break;\n          }\n\n          return _context.abrupt(\"return\", showAlert(\"Email hoặc password không đúng!\", \"\", [{\n            text: \"Trở lại\",\n            style: {\n              color: \"#ff5454\"\n            }\n          }]));\n\n        case 21:\n          showAlert(\"\" + errMessage, \"\", [], 2000);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 17]]);\n}\n\nfunction editProfile(action) {\n  var _yield$call2, body, user;\n\n  return _regeneratorRuntime.wrap(function editProfile$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(editProfileRequest.request, {\n            data: action.payload\n          });\n\n        case 3:\n          _yield$call2 = _context2.sent;\n          body = _yield$call2.body;\n          user = body.user;\n          _context2.next = 8;\n          return put(actionCreator.editProfileSuccess(user));\n\n        case 8:\n          showAlert(\"Cập nhật thông tin thành công!\", \"\", [], 2000);\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          showAlert(\"\" + errMessage, \"\", [], 2000);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\n\nfunction register(action) {\n  var _yield$call3, body, httpStatus, user, token;\n\n  return _regeneratorRuntime.wrap(function register$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(registerRequest.request, {\n            data: action.payload\n          });\n\n        case 3:\n          _yield$call3 = _context3.sent;\n          body = _yield$call3.body;\n          httpStatus = _yield$call3.httpStatus;\n\n          if (!(httpStatus === 200)) {\n            _context3.next = 13;\n            break;\n          }\n\n          user = body.user, token = body.token;\n          localStorage.setItem(\"utk\", token);\n          _context3.next = 11;\n          return put(actionCreator.loginSuccess(user));\n\n        case 11:\n          showAlert(\"Đăng ký tài khoản thành công!\", \"\", [], 1800);\n          setTimeout(function () {\n            Router.push(\"/home\", param = {\n              user: user\n            });\n          }, 1800);\n\n        case 13:\n          _context3.next = 20;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](0);\n\n          if (!(_context3.t0.response && _context3.t0.response.status === 409)) {\n            _context3.next = 19;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", showAlert(\"Email đã tồn tại!\", \"Xin hãy thử lại với một email khác\", [], 2000));\n\n        case 19:\n          showAlert(\"\" + errMessage, \"\", [], 2000);\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 15]]);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(types.EDIT_PROFILE, editProfile);\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(types.LOGIN, login);\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(types.REGISTER, register);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/home/nhathuynh/subject-mobile/MobileApp/store/user/user.saga.js"],"names":["login","editProfile","register","userSaga","takeLatest","call","put","types","actionCreator","loginRequest","editProfileRequest","registerRequest","errMessage","message","description","showAlert","title","actions","timeout","alertInstance","alert","setTimeout","close","action","payload","body","user","token","localStorage","setItem","loginSuccess","Router","push","params","Error","response","status","data","text","style","color","request","editProfileSuccess","httpStatus","param","EDIT_PROFILE","LOGIN","REGISTER"],"mappings":"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","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { Modal } from \"@ant-design/react-native\";\nimport { types, actionCreator } from \"./user.meta\";\nimport {\n  loginRequest,\n  editProfileRequest,\n  registerRequest,\n} from \"../../api/apiRouter\";\n\nconst errMessage = {\n  message: \"Opp! Đã xảy ra lỗi\",\n  description: \"Liên hệ ban quản trị viên để biết thêm thông tin chi tiết!\",\n};\n\nconst showAlert = (\n  title = \"\",\n  message = \"\",\n  actions = [],\n  timeout = 500000\n) => {\n  const alertInstance = Modal.alert(title, message, actions);\n  setTimeout(() => {\n    alertInstance.close();\n  }, timeout);\n};\n\nfunction* login(action) {\n  try {\n    const { body } = yield call(loginRequest, {\n     ...action.payload,\n    });\n    const { user, token } = body;\n    if (token) {\n      localStorage.setItem(\"pcutk\", token);\n      yield put(actionCreator.loginSuccess(user));\n      showAlert(\"Đăng nhập thành công!\", \"\", [], 1000);\n      setTimeout(() => {\n        Router.push('/home', params={user})\n        // chuyển hướng sang home\n      }, 1000);\n    } else {\n      throw Error;\n    }\n  } catch (error) {\n    if (\n      error.response &&\n      error.response.status === 404 &&\n      error.response.data.message === \"LOGIN_FAIL\"\n    ) {\n      return showAlert(\"Email hoặc password không đúng!\", \"\", [\n        { text: \"Trở lại\", style: { color: \"#ff5454\" } },\n      ]);\n    }\n    showAlert(`${errMessage}`, \"\", [], 2000);\n  }\n}\n\nfunction* editProfile(action) {\n  try {\n    const { body } = yield call(editProfileRequest.request, {\n      data: action.payload,\n    });\n    const { user } = body;\n    yield put(actionCreator.editProfileSuccess(user));\n    showAlert(\"Cập nhật thông tin thành công!\", \"\", [], 2000);\n  } catch (error) {\n    showAlert(`${errMessage}`, \"\", [], 2000);\n  }\n}\n\nfunction* register(action) {\n  try {\n    const { body, httpStatus } = yield call(registerRequest.request, {\n      data: action.payload,\n    });\n    if(httpStatus === 200){\n\n      const { user, token } = body;\n      localStorage.setItem(\"utk\", token);\n      yield put(actionCreator.loginSuccess(user));\n      showAlert(\"Đăng ký tài khoản thành công!\", \"\", [], 1800);\n      setTimeout(() => {\n        Router.push(\"/home\", param={user}) \n      }, 1800);\n    }\n    } catch (error) {\n      if (error.response && error.response.status === 409) {\n        return showAlert(\n          \"Email đã tồn tại!\",\n          \"Xin hãy thử lại với một email khác\",\n          [],\n          2000\n      );\n    }\n    showAlert(`${errMessage}`, \"\", [], 2000);\n  }\n}\n\nexport default function* userSaga() {\n  yield takeLatest(types.EDIT_PROFILE, editProfile);\n  yield takeLatest(types.LOGIN, login);\n  yield takeLatest(types.REGISTER, register);\n}\n"]},"metadata":{},"sourceType":"module"}