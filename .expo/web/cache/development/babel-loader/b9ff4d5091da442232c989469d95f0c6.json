{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(sagaGetMangas),\n    _marked2 = _regeneratorRuntime.mark(mangaMonitor);\n\nimport { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport { getMangas, getMangaById } from \"../../api/apiRouter\";\nimport { sagaErrorWrapper } from \"../../utils/error\";\nimport { types, actionCreators } from \"./manga.meta\";\n\nfunction sagaGetMangas(action) {\n  var _yield$call, body, httpStatus;\n\n  return _regeneratorRuntime.wrap(function sagaGetMangas$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(getMangas);\n\n        case 2:\n          _yield$call = _context.sent;\n          body = _yield$call.body;\n          httpStatus = _yield$call.httpStatus;\n\n          if (!(httpStatus === 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return put(actionCreators.actFetchMangasSuccess(body));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction mangaMonitor() {\n  return _regeneratorRuntime.wrap(function mangaMonitor$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeLatest(types.FETCH_MANGA, sagaErrorWrapper(sagaGetMangas))]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default mangaMonitor;","map":{"version":3,"sources":["/home/nhathuynh/subject-mobile/MobileApp/store/manga/manga.saga.js"],"names":["sagaGetMangas","mangaMonitor","takeLatest","put","call","all","getMangas","getMangaById","sagaErrorWrapper","types","actionCreators","action","body","httpStatus","actFetchMangasSuccess","FETCH_MANGA"],"mappings":";;uCAMUA,a;wCAiBAC,Y;;AAvBV,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,YAApB;AAEA,SAASC,gBAAT;AACA,SAASC,KAAT,EAAgBC,cAAhB;;AAEA,SAAUV,aAAV,CAAwBW,MAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC+B,iBAAMP,IAAI,CAACE,SAAD,CAAV;;AAD/B;AAAA;AACUM,UAAAA,IADV,eACUA,IADV;AACgBC,UAAAA,UADhB,eACgBA,UADhB;;AAAA,gBAEMA,UAAU,KAAK,GAFrB;AAAA;AAAA;AAAA;;AAAA;AAII,iBAAMV,GAAG,CAACO,cAAc,CAACI,qBAAf,CAAqCF,IAArC,CAAD,CAAT;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUX,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,GAAG,CAAC,CAERH,UAAU,CAACO,KAAK,CAACM,WAAP,EAAoBP,gBAAgB,CAACR,aAAD,CAApC,CAFF,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeC,YAAf","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport { getMangas, getMangaById } from \"../../api/apiRouter\";\n\nimport { sagaErrorWrapper } from \"../../utils/error\";\nimport { types, actionCreators } from \"./manga.meta\";\n  //5\nfunction* sagaGetMangas(action) {\n  const { body, httpStatus } = yield call(getMangas);\n  if (httpStatus === 200) {\n      //7\n    yield put(actionCreators.actFetchMangasSuccess(body));\n  }\n}\n\n// function* sagaFetchMangaById(action) {\n//   const { id } = action.payload;\n//   const { body, httpStatus } = yield call(getMangaById, id);\n//   if (httpStatus === 200) {\n//     yield put(actionCreators.actFetchMangaByIdSuccess(body));\n//   }\n// }\n\n// Monitoring Sagas\nfunction* mangaMonitor() {\n  yield all([\n        //4\n    takeLatest(types.FETCH_MANGA, sagaErrorWrapper(sagaGetMangas)),\n    // takeLatest(\n    //   types.FETCH_PRODUCT_BY_ID,\n    //   sagaErrorWrapper(sagaFetchProductById)\n    // ),\n  ]);\n}\n\nexport default mangaMonitor;\n"]},"metadata":{},"sourceType":"module"}