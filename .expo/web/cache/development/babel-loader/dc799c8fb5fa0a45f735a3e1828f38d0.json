{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/nhathuynh/subject-mobile/MobileApp/screens/ResultScreen/index.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { searchMangas } from \"../../api/apiRouter\";\nimport { Avatar } from \"react-native-elements\";\n\nvar ResultSearchScreen = function ResultSearchScreen(props) {\n  var navigation = props.navigation;\n  var data = props.route.params.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchMangas = _useState2[0],\n      setSearchMangas = _useState2[1];\n\n  var fetchMangeBySearchName = function fetchMangeBySearchName() {\n    var response, mangas;\n    return _regeneratorRuntime.async(function fetchMangeBySearchName$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(searchMangas(data));\n\n          case 2:\n            response = _context.sent;\n            mangas = response == null ? void 0 : response.body;\n            setSearchMangas(mangas);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchMangeBySearchName();\n  }, [searchMangas]);\n  return React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      minHeight: Dimensions.get(\"window\").height,\n      backgroundColor: \"#ffffff\",\n      padding: \"20px\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, (searchMangas == null ? void 0 : searchMangas.length) > 0 ? searchMangas == null ? void 0 : searchMangas.map(function (dataItem, index) {\n    var _dataItem$id;\n\n    return React.createElement(View, {\n      key: (_dataItem$id = dataItem == null ? void 0 : dataItem.id) != null ? _dataItem$id : index,\n      style: {\n        height: \"200px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"-10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation == null ? void 0 : navigation.navigate(\"MangaDetail\", {\n          data: dataItem\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(Avatar, {\n      source: {\n        uri: dataItem == null ? void 0 : dataItem.avatar\n      },\n      style: {\n        width: \"175px\",\n        height: \"150px\",\n        borderRadius: 5,\n        shadowColor: \"#000\",\n        shadowOpacity: 0.2,\n        shadowRadius: 10\n      },\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: {\n        color: \"#888\",\n        fontSize: \"14px\",\n        marginTop: \"12px\",\n        textAlign: \"initial\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, dataItem == null ? void 0 : dataItem.name))));\n  }) : React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      height: Dimensions.get(\"window\").height,\n      maxHeight: Dimensions.get(\"window\").height,\n      backgroundColor: \"#ffffff\",\n      padding: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: \"20px\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm n\\xE0o...\")));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontWeight: \"bold\"\n  }\n});\nexport default ResultSearchScreen;","map":{"version":3,"sources":["/home/nhathuynh/subject-mobile/MobileApp/screens/ResultScreen/index.js"],"names":["React","useEffect","useState","searchMangas","Avatar","ResultSearchScreen","props","navigation","data","route","params","setSearchMangas","fetchMangeBySearchName","response","mangas","body","width","Dimensions","get","minHeight","height","backgroundColor","padding","display","alignItems","length","map","dataItem","index","id","paddingLeft","paddingRight","navigate","uri","avatar","borderRadius","shadowColor","shadowOpacity","shadowRadius","color","fontSize","marginTop","textAlign","styles","text","name","maxHeight","fontWeight","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Dimensions,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport { searchMangas } from \"../../api/apiRouter\";\nimport { Avatar } from \"react-native-elements\";\n\nconst ResultSearchScreen = (props) => {\n  const { navigation } = props;\n  const { data } = props.route.params;\n\n  const [searchMangas, setSearchMangas] = useState([]);\n\n  const fetchMangeBySearchName = async () => {\n    const response = await searchMangas(data);\n    const mangas = response?.body;\n    setSearchMangas(mangas);\n  };\n\n  useEffect(() => {\n    fetchMangeBySearchName();\n  }, [searchMangas]);\n\n  return (\n    <View\n      style={{\n        width: Dimensions.get(\"window\").width,\n        minHeight: Dimensions.get(\"window\").height,\n        backgroundColor: \"#ffffff\",\n        padding: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      {searchMangas?.length > 0 ? (\n        searchMangas?.map((dataItem, index) => (\n          <View\n            key={dataItem?.id ?? index}\n            style={{\n              height: \"200px\",\n              paddingLeft: \"10px\",\n              paddingRight: \"-10px\",\n            }}\n          >\n            <TouchableOpacity\n              onPress={() =>\n                navigation?.navigate(\"MangaDetail\", {\n                  data: dataItem,\n                })\n              }\n            >\n              <Avatar\n                source={{ uri: dataItem?.avatar }}\n                style={{\n                  width: \"175px\",\n                  height: \"150px\",\n                  borderRadius: 5,\n                  shadowColor: \"#000\",\n                  shadowOpacity: 0.2,\n                  shadowRadius: 10,\n                }}\n                alt=\"\"\n              />\n              <View\n                style={{\n                  color: \"#888\",\n                  fontSize: \"14px\",\n                  marginTop: \"12px\",\n                  textAlign: \"initial\",\n                }}\n              >\n                <Text style={styles.text}>{dataItem?.name}</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        ))\n      ) : (\n        <View\n          style={{\n            width: Dimensions.get(\"window\").width,\n            height: Dimensions.get(\"window\").height,\n            maxHeight: Dimensions.get(\"window\").height,\n            backgroundColor: \"#ffffff\",\n            padding: \"20px\",\n          }}\n        >\n          <Text style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n            Không có kết quả tìm kiếm nào...\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontWeight: \"bold\",\n  },\n});\n\nexport default ResultSearchScreen;\n"]},"metadata":{},"sourceType":"module"}